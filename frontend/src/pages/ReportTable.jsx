import React from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { deleteReport } from '../features/reports/reportSlice';
import dayjs from 'dayjs';

const ReportsTable = () => {
  const { items, loading, error } = useSelector((state) => state.reports);
  const dispatch = useDispatch();

  const handleDelete = (id) => {
    if (!window.confirm('Delete this report?')) return;
    dispatch(deleteReport(id));
  };

  return (
    <div>
      {loading && <div className="py-4">Loading...</div>}
      {error && <div className="text-red-500 py-2">{error}</div>}

      <div className="overflow-x-auto">
        <table className="table-auto w-full border-collapse">
          <thead>
            <tr className="text-left">
              <th className="p-2">#</th>
              <th className="p-2">Type</th>
              <th className="p-2">School</th>
              <th className="p-2">Generated By</th>
              <th className="p-2">Created At</th>
              <th className="p-2">Actions</th>
            </tr>
          </thead>
          <tbody>
            {items.length === 0 && !loading && (
              <tr><td colSpan={6} className="p-4 text-center">No reports found</td></tr>
            )}

            {items.map((r, idx) => (
              <tr key={r._id} className="border-t">
                <td className="p-2 align-top">{idx + 1}</td>
                <td className="p-2 align-top">{r.type}</td>
                <td className="p-2 align-top">{r.school?.name || r.school || '-'}</td>
                <td className="p-2 align-top">{r.generatedBy?.name || '-'}</td>
                <td className="p-2 align-top">{dayjs(r.createdAt).format('YYYY-MM-DD')}</td>
                <td className="p-2 align-top">
                  <button className="btn btn-sm btn-error" onClick={() => handleDelete(r._id)}>Delete</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default ReportsTable;