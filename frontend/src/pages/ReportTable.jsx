import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import { deleteReport, reportView } from "../features/reports/reportSlice";
import dayjs from "dayjs";

const ReportsTable = () => {
  const { items, loading, error } = useSelector((state) => state.reports);
  const dispatch = useDispatch();

  const [showModal, setShowModal] = useState(false);
  const [selectedReport, setSelectedReport] = useState(null); // âœ… store single report

  const handleDelete = (id) => {
    if (!window.confirm("Delete this report?")) return;
    dispatch(deleteReport(id));
  };

  const handleView = (id) => {
    dispatch(reportView(id)).then((res) => {
      // Assuming your reportView returns the full report in res.payload
      setSelectedReport(res.payload);
      setShowModal(true);
    });
  };

  return (
    <div>
      {loading && <div className="py-4">Loading...</div>}
      {error && <div className="text-red-500 py-2">{error}</div>}

      <div className="overflow-x-auto bg-white rounded-lg shadow">
        <table className="table-auto w-full border-collapse">
          <thead>
            <tr className="bg-gray-100 text-left">
              <th className="p-2">#</th>
              <th className="p-2">Type</th>
              <th className="p-2">School</th>
              <th className="p-2">Session</th>
              <th className="p-2">Generated By</th>
              <th className="p-2">Created At</th>
              <th className="p-2">Actions</th>
            </tr>
          </thead>
          <tbody>
            {items.length === 0 && !loading && (
              <tr>
                <td colSpan={7} className="p-4 text-center">
                  No reports found
                </td>
              </tr>
            )}
            {items.map((r, idx) => (
              <tr key={r._id} className="border-t hover:bg-gray-50">
                <td className="p-2">{idx + 1}</td>
                <td className="p-2">{r.type}</td>
                <td className="p-2">{r.school?.name || "-"}</td>
                <td className="p-2">{r.session?.name || "-"}</td>
                <td className="p-2">{r.generatedBy?.name || "-"}</td>
                <td className="p-2">
                  {dayjs(r.createdAt).format("YYYY-MM-DD")}
                </td>
                <td className="p-2 flex gap-2">
                  <button
                    className="px-3 py-1 bg-blue-500 rounded-lg text-white"
                    onClick={() => handleView(r._id)}
                  >
                    View
                  </button>
                  <button
                    className="px-3 py-1 bg-red-500 rounded-lg text-white"
                    onClick={() => handleDelete(r._id)}
                  >
                    Delete
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* View Modal */}
      {showModal && selectedReport && (
  <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
    <div className="bg-white rounded-lg p-6 max-w-2xl w-full shadow-lg">
      
      {/* Dynamic Title */}
      <h2 className="text-2xl font-bold mb-4 border-b pb-2">
        {selectedReport.title || `${selectedReport.type} Report`}
      </h2>

      {/* Table View */}
      <div className="overflow-auto max-h-[400px]">
        <table className="table-auto w-full border border-gray-300">
          <tbody>
            <tr>
              <td className="p-2 font-semibold bg-gray-100 border">Type</td>
              <td className="p-2 border">{selectedReport.type}</td>
            </tr>
            <tr>
              <td className="p-2 font-semibold bg-gray-100 border">School</td>
              <td className="p-2 border">{selectedReport.school?.name || "-"}</td>
            </tr>
            <tr>
              <td className="p-2 font-semibold bg-gray-100 border">Session</td>
              <td className="p-2 border">{selectedReport.session?.name || "-"}</td>
            </tr>
            <tr>
              <td className="p-2 font-semibold bg-gray-100 border">Generated By</td>
              <td className="p-2 border">{selectedReport.generatedBy?.name || "-"}</td>
            </tr>
            <tr>
              <td className="p-2 font-semibold bg-gray-100 border">Created At</td>
              <td className="p-2 border">
                {dayjs(selectedReport.createdAt).format("YYYY-MM-DD")}
              </td>
            </tr>
            {selectedReport.data && (
              <tr>
                <td className="p-2 font-semibold bg-gray-100 border">Report Data</td>
                <td className="p-2 border whitespace-pre-wrap">
                  {typeof selectedReport.data === "object"
                    ? JSON.stringify(selectedReport.data, null, 2)
                    : selectedReport.data}
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>

      {/* Close Button */}
      <div className="mt-4 flex justify-end">
        <button
          className="bg-red-500 text-white px-4 py-2 rounded"
          onClick={() => {
            setShowModal(false);
            setSelectedReport(null);
          }}
        >
          Close
        </button>
      </div>
    </div>
  </div>
)}

    </div>
  );
};

export default ReportsTable;
